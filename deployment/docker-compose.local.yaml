services:
  app:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile.local
    volumes:
      - ..:/app
    env_file:
      - ../config/.env.local
    ports:
      - "8888:8888"
    depends_on:
      db:
        condition: service_healthy
      kafka:
        condition: service_started

  db:
    image: postgres:15-alpine
    restart: always
    env_file:
      - ../config/.env.local
    ports:
      - "5432:5432"
    volumes:
      - ../postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 5s
      retries: 5

  zookeeper:
    image: bitnami/zookeeper:3.8
    restart: always
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    healthcheck:
      test: [ "CMD", "zkServer.sh", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: bitnami/kafka:3.4
    restart: always
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENERS=PLAINTEXT://0.0.0.0:9092
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    restart: always
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
    ports:
      - "8081:8080"
    depends_on:
      kafka:
        condition: service_started

volumes:
  postgres_data:
